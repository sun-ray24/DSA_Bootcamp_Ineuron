Assignment - 24 Job Ready Bootcamp in C++, DSA and IOT MySirG
Functions in C++
1. Define a function to check whether a given number is a Prime number or not.
#include <iostream>
using namespace std;
void prime(int);
int main() {
    int n;
    cout<<"Enter a number "<<endl;
    cin>>n;
    prime(n);
    return 0;
}
void prime(int n)
{
    int i;
    int flag=0;
    for(i=2;i<n;i++)
    {
        if(n%i==0)
        {
            flag=1;
            cout<<"Its not a prime number "<<endl;
            break;
        }
    }
    if(!flag)
    cout<<"Prime number"<<endl;
    
}
2. Define a function to find the highest value digit in a given number.
#include <iostream>
using namespace std;
void Highestdigit(int);
int main() {
    int n;
    cout<<"Enter a number "<<endl;
    cin>>n;
    Highestdigit(n);
    return 0;
}
void Highestdigit(int n)
{
    int i,temp;
    int largest =0;
        while(n>0)
    {
    temp=n%10;
        if(temp>largest)largest=temp;
        n=n/10;
    }
    cout<<"Largest digit is "<<largest <<endl;
    
}
3. Define a function to calculate x raised to the power y.
#include <iostream>
using namespace std;
void pow(int,int);
int main() {
    int x,y;
    cout<<"Enter a number x and a power Y "<<endl;
    cin>>x>>y;
    
    pow(x,y);
    return 0;
}
void pow(int x,int y)
{
    int result=1;
    while(y>0)
    {
        result = result*x;
        y--;
    }
    cout<<"X raised to the power Y is "<<result <<endl;
    
}
4. Define a function to print Pascal Triangle up to N lines.
#include <iostream>
using namespace std;
void pascalTraingle(int);
int main()
{
    int rows,c=1,blk,i,j;
    cout<<"Input number of rows: "<<endl;
    cin>>rows;
    pascalTraingle(rows);
    return 0;
}
void  pascalTraingle(int rows)
{        int c=1,blk,i,j;
        int space=32;
    
    
    for(i=0;i<rows;i++)
    {
        
        for(blk=1;blk<=rows-i;blk++)
        cout<<"  ";
        for(j=0;j<=i;j++)
        {
            if (j==0||i==0)
                c=1;
            else
               c=c*(i-j+1)/j;
            cout<<"   "<<c;
        }
       cout<<endl;
    }
}

5. Define a function to check whether a given number is a term in a Fibonacci series or not.
#include <iostream>
using namespace std;
void FibTerm(int);
int main()
{
    int term;
    cout<<"Enter the term "<<endl;
    cin>>term;
    FibTerm(term);
    return 0;
}
void FibTerm(int term)
{
    int firstTerm,secondTerm,newTerm;
    firstTerm=0;
    secondTerm=1;
    newTerm=0;
    while(newTerm<term){
    newTerm = firstTerm+secondTerm;
   secondTerm = firstTerm;
   firstTerm = newTerm;
   if(newTerm == term)
   {
       cout<<"Term is present in the series"<<endl;
       break;
   }
    }
}

6. Define a function to swap data of two int variables using call by reference
#include <iostream>
void swapbyRef(int &a,int &b);
using namespace std;
int main() {
    int a,b;
    cout << "Enter two numbers a and b"<<endl;
    cin>>a>>b;
    cout<<"Before swap "<<a<<" "<<b<<endl;
    swapbyRef(a,b);
    cout<<"After swap "<<a<<" "<<b<<endl;
    return 0;
}
void swapbyRef(int &a,int &b)
{
    int c;
    c=a;
    a=b;
    b=c;
}
7. Write a function using the default argument that is able to add 2 or 3 numbers.
#include <iostream>
using namespace std;
int add(int, int, int=0);

int main()
{
    int a,b,c;
   cout<<"Enter two numbers to add "<<endl;
   cin>>a>>b;
   cout<<"Sum of two numbers is "<<add(a,b)<<" "<<endl;
   cout<<"Enter three numbers to add "<<endl;
   cin>>a>>b>>c;
   cout<<"Sum of three numbers is "<<add(a,b,c)<<" "<<endl;
   return 0;
}
int add(int a, int b, int c)
{
    return a+b+c;
}

8. Define overloaded functions to calculate area of circle, area of rectangle and area of triangle
#include <iostream>
using namespace std;
void area(int);
void area(int,int);
void area(int,int,int);

int main()
{
    int a,b,c,r,l,choice;
    cout<<"Enter choice 1. Circle 2. Rechtange 3. Traingle "<<endl;
    cin>>choice;
    switch(choice)
    {
        case 1:
        {
            cout<<"Enter radius"<<endl;
            cin>>r;
            area(r);
            break;
        }
        case 2:
        {
            cout<<"Enter length and breadth"<<endl;
            cin>>l>>b;
            area(l,b);
            break;
        }
        case 3:
        {
            cout<<"Enter triange sides "<<endl;
            area(a,b,c);
            break;
        }
        default: {}
        
    }
    
}
void area(int r)
{
    cout<<"Area of circle is "<<2*3.14*r*r<<endl;
}
void area(int l,int b)
{
    cout<<"Area of a rectangle is "<<l*b <<endl;
}
void area(int a,int b,int h)
{
    cout<<"Area of traingle is "<<1/2*b*h <<endl;
}
9. Write functions using function overloading to find a maximum of two numbers and both the numbers can be integer or real.
#include <iostream>
using namespace std;
void max(int,int);
void max(float,float);
void max(double,double);
int main()
{
    int ia,ib;
    float fa,fb;
    double da,db;
    cout<<"Enter two int  numbers "<<endl;
    cin>>ia>>ib;
    max(ia,ib);
     cout<<"Enter two float  numbers "<<endl;
    cin>>fa>>fb;
    max(fa,fb);
     cout<<"Enter two float  numbers "<<endl;
    cin>>da>>db;
    max(da,db);
    
    
    return 0;
}
void max(int a,int b)
{
    int largest=0;
    largest = (a>b)?a:b;
    cout<<"Largest is "<<largest<<endl;
}
void max(float a,float b){
float largest=0;
    largest = (a>b)?a:b;
    cout<<"Largest is "<<largest<<endl;
}
void max(double a,double b)
{
double largest=0;
    largest = (a>b)?a:b;
    cout<<"Largest is "<<largest<<endl;
}
10. Write functions using function overloading to add two numbers having different data types.
#include <iostream>
using namespace std;
void add(int,int);
void add(float,float);
void add(double,double);
int main()
{
    int ia,ib;
    float fa,fb;
    double da,db;
    cout<<"Enter two int  numbers "<<endl;
    cin>>ia>>ib;
    add(ia,ib);
     cout<<"Enter two float  numbers "<<endl;
    cin>>fa>>fb;
    add(fa,fb);
     cout<<"Enter two float  numbers "<<endl;
    cin>>da>>db;
    add(da,db);
    
    
    return 0;
}
void add(int a,int b)
{
    cout<<"Sum  is "<<a+b<<endl;
}
void add(float a,float b){
cout<<"Sum  is "<<a+b<<endl;
}
void add(double a,double b)
{
cout<<"Sum  is "<<a+b<<endl;
}