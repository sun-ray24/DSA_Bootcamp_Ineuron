Assignment - 21 A Job Ready Bootcamp in C++, DSA and IOT MySirG
Structure
1. Define a structure Employee with member variables id, name, salary
#include <stdio.h>
struct Employee{
int id;
char name[];
int salary;
}

int main() {
    printf("Structure Declaration Program");

    return 0;
}
2. Write a function to take input employee data from the user. [ Refer structure from question 1 ]
#include <stdio.h>
struct Employee{
int id;
char name[10];
int salary;
};

int main() {
   
    struct Employee emp;
    printf("Enter emp id, name and salary\n");
    scanf("%d %s %d",&emp.id,&emp.name,&emp.salary);
    puts(emp.name);
    return 0;
}
3. Write a function to display employee data. [ Refer structure from question 1 ]
#include <stdio.h>

struct Employee{
int id;
char name[10];
int salary;
};
struct Employee insert( );
void display(struct Employee);

int main() {
   
    struct Employee emp;
   emp =  insert();
    display(emp);
     return 0;
}
void display(struct Employee emp){
   
    printf("Employee ID is %d\nEmployee salary is %d\n",emp.id,emp.salary);
    puts(emp.name);
    
    
}
struct Employee insert(){
   struct Employee emp;
    printf("Enter emp id, name and salary\n");
    scanf("%d %s %d",&emp.id,&emp.name,&emp.salary);
    return emp;
    
}
4. Write a function to find the highest salary employee from a given array of 10
employees. [ Refer structure from question 1]
#include <stdio.h>

struct Employee{
int id;
char name[10];
int salary;
};
void findHighestSalryEmp();

int main() {
   
    findHighestSalryEmp();
     return 0;
}
void findHighestSalryEmp()
{
    struct Employee emp[10];
    int i=0;
    int largest=0;
    int index=0;
    while(i<10)
    {
        printf("Enter ID name and salary of %d employee\n",i);
        scanf("%d%s%d",&emp[i].id, &emp[i].name,&emp[i].salary);
        if(emp[i].salary>largest){
            largest=emp[i].salary;
            index=i;
        }
        i++;
    }
    printf("Employee %d has highest salary of %d",index,emp[index].salary);
}

5. Write a function to sort employees according to their salaries [ refer structure from question 1]
#include <stdio.h>

struct Employee{
int id;
char name[10];
int salary;
};
void sortEmp();

int main() {
   
    sortEmp();
     return 0;
}
void sortEmp()
{
    struct Employee emp[10],temp;
    int i=0;
    int j;
    int largest=0;
    int index=0;
    printf("Enter ID name and salary of 10 employees\n");
    while(i<10)
    {
        scanf("%d%s%d",&emp[i].id, &emp[i].name,&emp[i].salary);
        i++;
    }
    for(i=0;i<10;i++){
        for(j=0;j<9-i;j++){
            if(emp[j].salary>emp[j+1].salary)
            {
                temp = emp[j];
                emp[j]=emp[j+1];
                emp[j+1]=temp;
                
            }
            
        }
    }
    printf("Sorted list of employees are:\n");
    for(i=0;i<10;i++)
    {
        printf("%d  %s  %d\n",emp[i].id, emp[i].name,emp[i].salary);
        
    }
}


6. Write a function to sort employees according to their names [refer structure from question 1]
#include <stdio.h>

struct Employee{
int id;
char name[10];
int salary;
};
void sortEmp();

int main() {
   
    sortEmp();
     return 0;
}
void sortEmp()
{
    struct Employee emp[10],temp;
    int i=0;
    int j;
    int largest=0;
    int index=0;
    printf("Enter ID name and salary of 10 employees\n");
    while(i<10)
    {
        scanf("%d%s%d",&emp[i].id, &emp[i].name,&emp[i].salary);
        i++;
    }
    for(i=0;i<10;i++){
        for(j=0;j<9-i;j++){
            if(emp[j].name[0]>emp[j+1].name[0])
            {
                temp = emp[j];
                emp[j]=emp[j+1];
                emp[j+1]=temp;
                
            }
            
        }
    }
    printf("Sorted list of employees are:\n");
    for(i=0;i<10;i++)
    {
        printf("%d  %s  %d\n",emp[i].id, emp[i].name,emp[i].salary);
        
    }
}

7. Write a program to calculate the difference between two time periods.
#include <stdio.h>

struct time{
int hr;
char min;
int sec;
};
void timeDiff();

int main() {
   
    timeDiff();
     return 0;
}
void timeDiff()
{
    struct time startTime,stopTime,timeDiff;
    printf("Enter start time Hours Minutes Seconds\n");
    scanf("%d%d%d",&startTime.hr,&startTime.min,&startTime.sec);
    printf("Enter stop time Hours Minutes Seconds\n");
    scanf("%d%d%d",&stopTime.hr,&stopTime.min,&stopTime.sec);
    if(stopTime.sec<startTime.sec)
    {
    stopTime.sec=stopTime.sec+60;
    stopTime.min = stopTime.min-1;
    }
    if(stopTime.min<startTime.min)
    {
    stopTime.min=stopTime.min+60;
    stopTime.hr = stopTime.hr-1;
    }
    timeDiff.sec=stopTime.sec-startTime.sec;
    timeDiff.hr=stopTime.hr-startTime.hr;
    timeDiff.min=stopTime.min-startTime.min;
   
    printf("Diff in hr min sec\n %d %d %d ",timeDiff.hr,timeDiff.min,timeDiff.sec);
          
      
}

8. Write a program to store information of 10 students and display them using structure.
#include <stdio.h>

struct Student{
int id;
char name[10];
char branch[10];
};
struct Student insert( );
void display(struct Student);

int main() {
   
    struct Student st;
    int i=0;
    while(i<10){
   st =  insert();
    display(st);
    i++;
    }
     return 0;
}
void display(struct Student st){
   
    printf("Student ID is %d Student name is %s Student branch is %s\n",st.id,st.name,st.branch);
    //puts(emp.name);
    
    
}
struct Student insert(){
   struct Student st;
    printf("Enter student id, name and branch\n");
    scanf("%d %s %s",&st.id,&st.name,&st.branch);
    return st;
    
}

9. Write a program to store information of n students and display them using structure
#include <stdio.h>

struct Student{
int id;
char name[10];
char branch[10];
};
struct Student insert( );
void display(struct Student);

int main() {
   
    struct Student st;
    int i=0;
    int n;
    printf("How many students: Enter value of N\n");
    scanf("%d",&n);
    while(i<n){
   st =  insert();
    display(st);
    i++;
    }
     return 0;
}
void display(struct Student st){
   
    printf("Student ID is %d Student name is %s Student branch is %s\n",st.id,st.name,st.branch);
    //puts(emp.name);
    
    
}
struct Student insert(){
   struct Student st;
    printf("Enter student id, name and branch\n");
    scanf("%d %s %s",&st.id,&st.name,&st.branch);
    return st;
    
}

10. Write a program to enter the marks of 5 students in Chemistry, Mathematics and Physics (each out of 100) using a structure named Marks having elements roll no.,name, chem_marks, maths_marks and phy_marks and then display the percentage of each student.
#include <stdio.h>

struct Marks{
int rollNo;
char name[50];
int chem_marks, maths_marks, phy_marks;
};
void calculatePercentage( );


int main() {
   
    calculatePercentage();
     return 0;
}
void calculatePercentage()
{
struct Marks st[5];
int i=0;float percentage=0;
printf("\nEnter the following information of 5 students: Roll no.,name, chem_marks, maths_marks and phy_marks ");
while(i<5){
scanf("%d%s%d%d%d",&st[i].rollNo,&st[i].name, &st[i].chem_marks, &st[i].maths_marks,&st[i].phy_marks);
percentage =(float) (st[i].chem_marks + st[i].maths_marks + st[i].phy_marks)/300 * 100;
printf("\n Percentage of Roll No %d is %f ",st[i].rollNo,percentage);
i++;
}
}
