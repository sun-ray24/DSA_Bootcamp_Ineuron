Assignment - 16 A Job Ready Bootcamp in C++, DSA and IOT MySirG
Multi-Dimensional Array in C Language
1. Write a program to calculate the sum of two matrices each of order 3x3.
#include <stdio.h>

int main() {
    int m1[3][3],m2[3][3],c[3][3];
    int i,j;
    i=0;
    j=0;
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    printf("Enter the second matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m2[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                 c[i][j]=m1[i][j]+m2[i][j];  
        }
    
    }
    
    printf("Matrix addition is \n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                printf("%d ",c[i][j]);
        }
        printf("\n");
    
    }

    return 0;
}

2. Write a program to calculate the product of two matrices each of order 3x3.
#include <stdio.h>

int main() {
    int m1[3][3],m2[3][3],c[3][3];
    int i,j;
    i=0;
    j=0;
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    printf("Enter the second matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m2[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
        for (int k = 0; k < 3; ++k) {
            c[i][j] += m1[i][k] * m2[k][j];
                 
        }
    
    }
    
    printf("Product of matrix is \n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                printf("%d ",c[i][j]);
        }
        printf("\n");
    
    }

    return 0;
}
3. Write a program in C to find the transpose of a given matrix.
#include <stdio.h>

int main() {
    int m1[3][3],transpose[3][3];
    int i,j;
    i=0;
    j=0;
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                 transpose[i][j]=m1[j][i];  
        }
    
    }
    
    printf("Tranpose of matrix is is \n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                printf("%d ",transpose[i][j]);
        }
        printf("\n");
    
    }

    return 0;
}
4. Write a program in C to find the sum of right diagonals of a matrix.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j,sum;
    i=0;
    j=0;
    sum=0;
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                if(i==j) sum+= m1[i][j];
                
                
        }
    
    }
    
    printf("Sum of right diagonal is %d", sum);
    
    
    
    
    

    return 0;
}
5. Write a program in C to find the sum of left diagonals of a matrix.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j,sum;
    i=0;
    j=0;
    sum=0;
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    
    for(i=0;i<3;i++){
        for(j=2;j>=0;j--){
                sum+= m1[i][j]; break;
                
                
        }
    
    }
    printf("Sum of left diagonal is %d", sum);
    
    
    
    
    

    return 0;
}
6. Write a program in C to find the sum of rows and columns of a Matrix.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j,sumrow[3],sumcol[3];
    i=0;
    j=0;
    for(i=0;i<2;i++){
    sumrow[i]=0;
    sumcol[i]=0;
    }
    
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                sumrow[i]+= m1[i][j];
                
                
        }
    
    }
    for(j=0;j<3;j++){
        for(i=0;i<=2;i++){
                sumcol[j]+= m1[i][j]; 
                
                
        }
    
    }
    for(i=0;i<=2;i++){
    printf("Sum of row[%d] is %d\n", i,sumrow[i]);
    }
    
    for(i=0;i<=2;i++){
    printf("Sum of column[%d] is %d\n", i,sumcol[i]);
    }
    
    

    return 0;
}
7. Write a program in C to print or display the lower triangular of a given matrix.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j;
    i=0;
    j=0;
    
    
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
               printf("%d",m1[i][j]);
               if(i==j)break;
                
             }
             printf("\n");
        }
    
   
    

    return 0;
}
8. Write a program in C to print or display an upper triangular matrix.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j;
    i=0;
    j=0;
    
    
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                if(i<=j){
               printf("%d",m1[i][j]);
               }
               
                
             }
             printf("\n");
        }
    
   
    

    return 0;
}
9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j,count;
    i=0;
    j=0;
    count=0;
    
    
    
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                if(m1[i][j]==0)count++;
               
                
             }
            }
    
   
    if(count>=3)printf("\nThis is sparse matrix");
    else printf("\n Dense MAtrix");

    return 0;
}
10. Write a program in C to find the row with maximum number of 1s.
#include <stdio.h>

int main() {
    int m1[3][3];
    int i,j,sumrow[3],largest,index;
    i=0;
    j=0;
    largest=0;
    index=0;
    for(i=0;i<2;i++){
    sumrow[i]=0;
      }
    
    printf("Enter the first matrix\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf("%d",&m1[i][j]);
        }
        
    }
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
                if(m1[i][j]==1)
                sumrow[i]++;
                
                
        }
    
    }
    
    for(i=0;i<=2;i++){
                if(sumrow[i]>largest)
                {
                largest=sumrow[i];
                index=i;
                }
    }
    printf("row[%d] has maximum no of 1's", index);
    
    
    

    return 0;
}
